{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Util_1 = require(\"../Util\");\n\nvar Factory_1 = require(\"../Factory\");\n\nvar Shape_1 = require(\"../Shape\");\n\nvar Global_1 = require(\"../Global\");\n\nvar Path = function (_super) {\n  __extends(Path, _super);\n\n  function Path(config) {\n    var _this = _super.call(this, config) || this;\n\n    _this.dataArray = [];\n    _this.pathLength = 0;\n    _this.dataArray = Path.parsePathData(_this.data());\n    _this.pathLength = 0;\n\n    for (var i = 0; i < _this.dataArray.length; ++i) {\n      _this.pathLength += _this.dataArray[i].pathLength;\n    }\n\n    _this.on('dataChange.konva', function () {\n      this.dataArray = Path.parsePathData(this.data());\n      this.pathLength = 0;\n\n      for (var i = 0; i < this.dataArray.length; ++i) {\n        this.pathLength += this.dataArray[i].pathLength;\n      }\n    });\n\n    return _this;\n  }\n\n  Path.prototype._sceneFunc = function (context) {\n    var ca = this.dataArray;\n    context.beginPath();\n\n    for (var n = 0; n < ca.length; n++) {\n      var c = ca[n].command;\n      var p = ca[n].points;\n\n      switch (c) {\n        case 'L':\n          context.lineTo(p[0], p[1]);\n          break;\n\n        case 'M':\n          context.moveTo(p[0], p[1]);\n          break;\n\n        case 'C':\n          context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n          break;\n\n        case 'Q':\n          context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n          break;\n\n        case 'A':\n          var cx = p[0],\n              cy = p[1],\n              rx = p[2],\n              ry = p[3],\n              theta = p[4],\n              dTheta = p[5],\n              psi = p[6],\n              fs = p[7];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          context.translate(cx, cy);\n          context.rotate(psi);\n          context.scale(scaleX, scaleY);\n          context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.rotate(-psi);\n          context.translate(-cx, -cy);\n          break;\n\n        case 'z':\n          context.closePath();\n          break;\n      }\n    }\n\n    context.fillStrokeShape(this);\n  };\n\n  Path.prototype.getSelfRect = function () {\n    var points = [];\n    this.dataArray.forEach(function (data) {\n      if (data.command === 'A') {\n        var start = data.points[4];\n        var dTheta = data.points[5];\n        var end = data.points[4] + dTheta;\n        var inc = Math.PI / 180.0;\n\n        if (Math.abs(start - end) < inc) {\n          inc = Math.abs(start - end);\n        }\n\n        if (dTheta < 0) {\n          for (var t = start - inc; t > end; t -= inc) {\n            var point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n            points.push(point.x, point.y);\n          }\n        } else {\n          for (var t = start + inc; t < end; t += inc) {\n            var point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n            points.push(point.x, point.y);\n          }\n        }\n      } else if (data.command === 'C') {\n        for (var t = 0.0; t <= 1; t += 0.01) {\n          var point = Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n          points.push(point.x, point.y);\n        }\n      } else {\n        points = points.concat(data.points);\n      }\n    });\n    var minX = points[0];\n    var maxX = points[0];\n    var minY = points[1];\n    var maxY = points[1];\n    var x, y;\n\n    for (var i = 0; i < points.length / 2; i++) {\n      x = points[i * 2];\n      y = points[i * 2 + 1];\n\n      if (!isNaN(x)) {\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x);\n      }\n\n      if (!isNaN(y)) {\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y);\n      }\n    }\n\n    return {\n      x: Math.round(minX),\n      y: Math.round(minY),\n      width: Math.round(maxX - minX),\n      height: Math.round(maxY - minY)\n    };\n  };\n\n  Path.prototype.getLength = function () {\n    return this.pathLength;\n  };\n\n  Path.prototype.getPointAtLength = function (length) {\n    var point,\n        i = 0,\n        ii = this.dataArray.length;\n\n    if (!ii) {\n      return null;\n    }\n\n    while (i < ii && length > this.dataArray[i].pathLength) {\n      length -= this.dataArray[i].pathLength;\n      ++i;\n    }\n\n    if (i === ii) {\n      point = this.dataArray[i - 1].points.slice(-2);\n      return {\n        x: point[0],\n        y: point[1]\n      };\n    }\n\n    if (length < 0.01) {\n      point = this.dataArray[i].points.slice(0, 2);\n      return {\n        x: point[0],\n        y: point[1]\n      };\n    }\n\n    var cp = this.dataArray[i];\n    var p = cp.points;\n\n    switch (cp.command) {\n      case 'L':\n        return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n\n      case 'C':\n        return Path.getPointOnCubicBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n\n      case 'Q':\n        return Path.getPointOnQuadraticBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n\n      case 'A':\n        var cx = p[0],\n            cy = p[1],\n            rx = p[2],\n            ry = p[3],\n            theta = p[4],\n            dTheta = p[5],\n            psi = p[6];\n        theta += dTheta * length / cp.pathLength;\n        return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n    }\n\n    return null;\n  };\n\n  Path.getLineLength = function (x1, y1, x2, y2) {\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  };\n\n  Path.getPointOnLine = function (dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n    if (fromX === undefined) {\n      fromX = P1x;\n    }\n\n    if (fromY === undefined) {\n      fromY = P1y;\n    }\n\n    var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n    var run = Math.sqrt(dist * dist / (1 + m * m));\n\n    if (P2x < P1x) {\n      run *= -1;\n    }\n\n    var rise = m * run;\n    var pt;\n\n    if (P2x === P1x) {\n      pt = {\n        x: fromX,\n        y: fromY + rise\n      };\n    } else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\n      pt = {\n        x: fromX + run,\n        y: fromY + rise\n      };\n    } else {\n      var ix, iy;\n      var len = this.getLineLength(P1x, P1y, P2x, P2y);\n\n      if (len < 0.00000001) {\n        return undefined;\n      }\n\n      var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n      u = u / (len * len);\n      ix = P1x + u * (P2x - P1x);\n      iy = P1y + u * (P2y - P1y);\n      var pRise = this.getLineLength(fromX, fromY, ix, iy);\n      var pRun = Math.sqrt(dist * dist - pRise * pRise);\n      run = Math.sqrt(pRun * pRun / (1 + m * m));\n\n      if (P2x < P1x) {\n        run *= -1;\n      }\n\n      rise = m * run;\n      pt = {\n        x: ix + run,\n        y: iy + rise\n      };\n    }\n\n    return pt;\n  };\n\n  Path.getPointOnCubicBezier = function (pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n    function CB1(t) {\n      return t * t * t;\n    }\n\n    function CB2(t) {\n      return 3 * t * t * (1 - t);\n    }\n\n    function CB3(t) {\n      return 3 * t * (1 - t) * (1 - t);\n    }\n\n    function CB4(t) {\n      return (1 - t) * (1 - t) * (1 - t);\n    }\n\n    var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n    var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  Path.getPointOnQuadraticBezier = function (pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n    function QB1(t) {\n      return t * t;\n    }\n\n    function QB2(t) {\n      return 2 * t * (1 - t);\n    }\n\n    function QB3(t) {\n      return (1 - t) * (1 - t);\n    }\n\n    var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n    var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  Path.getPointOnEllipticalArc = function (cx, cy, rx, ry, theta, psi) {\n    var cosPsi = Math.cos(psi),\n        sinPsi = Math.sin(psi);\n    var pt = {\n      x: rx * Math.cos(theta),\n      y: ry * Math.sin(theta)\n    };\n    return {\n      x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n      y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n    };\n  };\n\n  Path.parsePathData = function (data) {\n    if (!data) {\n      return [];\n    }\n\n    var cs = data;\n    var cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\n    cs = cs.replace(new RegExp(' ', 'g'), ',');\n\n    for (var n = 0; n < cc.length; n++) {\n      cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n    }\n\n    var arr = cs.split('|');\n    var ca = [];\n    var coords = [];\n    var cpx = 0;\n    var cpy = 0;\n    var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n    var match;\n\n    for (n = 1; n < arr.length; n++) {\n      var str = arr[n];\n      var c = str.charAt(0);\n      str = str.slice(1);\n      coords.length = 0;\n\n      while (match = re.exec(str)) {\n        coords.push(match[0]);\n      }\n\n      var p = [];\n\n      for (var j = 0, jlen = coords.length; j < jlen; j++) {\n        var parsed = parseFloat(coords[j]);\n\n        if (!isNaN(parsed)) {\n          p.push(parsed);\n        } else {\n          p.push(0);\n        }\n      }\n\n      while (p.length > 0) {\n        if (isNaN(p[0])) {\n          break;\n        }\n\n        var cmd = null;\n        var points = [];\n        var startX = cpx,\n            startY = cpy;\n        var prevCmd, ctlPtx, ctlPty;\n        var rx, ry, psi, fa, fs, x1, y1;\n\n        switch (c) {\n          case 'l':\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n\n          case 'L':\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n\n          case 'm':\n            var dx = p.shift();\n            var dy = p.shift();\n            cpx += dx;\n            cpy += dy;\n            cmd = 'M';\n\n            if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n              for (var idx = ca.length - 2; idx >= 0; idx--) {\n                if (ca[idx].command === 'M') {\n                  cpx = ca[idx].points[0] + dx;\n                  cpy = ca[idx].points[1] + dy;\n                  break;\n                }\n              }\n            }\n\n            points.push(cpx, cpy);\n            c = 'l';\n            break;\n\n          case 'M':\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'M';\n            points.push(cpx, cpy);\n            c = 'L';\n            break;\n\n          case 'h':\n            cpx += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n\n          case 'H':\n            cpx = p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n\n          case 'v':\n            cpy += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n\n          case 'V':\n            cpy = p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n\n          case 'C':\n            points.push(p.shift(), p.shift(), p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n\n          case 'c':\n            points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n\n          case 'S':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n\n            if (prevCmd.command === 'C') {\n              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n              ctlPty = cpy + (cpy - prevCmd.points[3]);\n            }\n\n            points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n\n          case 's':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n\n            if (prevCmd.command === 'C') {\n              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n              ctlPty = cpy + (cpy - prevCmd.points[3]);\n            }\n\n            points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n\n          case 'Q':\n            points.push(p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n\n          case 'q':\n            points.push(cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'Q';\n            points.push(cpx, cpy);\n            break;\n\n          case 'T':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n\n            if (prevCmd.command === 'Q') {\n              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n              ctlPty = cpy + (cpy - prevCmd.points[1]);\n            }\n\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'Q';\n            points.push(ctlPtx, ctlPty, cpx, cpy);\n            break;\n\n          case 't':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n\n            if (prevCmd.command === 'Q') {\n              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n              ctlPty = cpy + (cpy - prevCmd.points[1]);\n            }\n\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'Q';\n            points.push(ctlPtx, ctlPty, cpx, cpy);\n            break;\n\n          case 'A':\n            rx = p.shift();\n            ry = p.shift();\n            psi = p.shift();\n            fa = p.shift();\n            fs = p.shift();\n            x1 = cpx;\n            y1 = cpy;\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'A';\n            points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n            break;\n\n          case 'a':\n            rx = p.shift();\n            ry = p.shift();\n            psi = p.shift();\n            fa = p.shift();\n            fs = p.shift();\n            x1 = cpx;\n            y1 = cpy;\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'A';\n            points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n            break;\n        }\n\n        ca.push({\n          command: cmd || c,\n          points: points,\n          start: {\n            x: startX,\n            y: startY\n          },\n          pathLength: this.calcLength(startX, startY, cmd || c, points)\n        });\n      }\n\n      if (c === 'z' || c === 'Z') {\n        ca.push({\n          command: 'z',\n          points: [],\n          start: undefined,\n          pathLength: 0\n        });\n      }\n    }\n\n    return ca;\n  };\n\n  Path.calcLength = function (x, y, cmd, points) {\n    var len, p1, p2, t;\n    var path = Path;\n\n    switch (cmd) {\n      case 'L':\n        return path.getLineLength(x, y, points[0], points[1]);\n\n      case 'C':\n        len = 0.0;\n        p1 = path.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = path.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n          len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          p1 = p2;\n        }\n\n        return len;\n\n      case 'Q':\n        len = 0.0;\n        p1 = path.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);\n\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = path.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);\n          len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          p1 = p2;\n        }\n\n        return len;\n\n      case 'A':\n        len = 0.0;\n        var start = points[4];\n        var dTheta = points[5];\n        var end = points[4] + dTheta;\n        var inc = Math.PI / 180.0;\n\n        if (Math.abs(start - end) < inc) {\n          inc = Math.abs(start - end);\n        }\n\n        p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n\n        if (dTheta < 0) {\n          for (t = start - inc; t > end; t -= inc) {\n            p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n        } else {\n          for (t = start + inc; t < end; t += inc) {\n            p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n        }\n\n        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n        return len;\n    }\n\n    return 0;\n  };\n\n  Path.convertEndpointToCenterParameterization = function (x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n    var psi = psiDeg * (Math.PI / 180.0);\n    var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;\n    var yp = -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;\n    var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n    if (lambda > 1) {\n      rx *= Math.sqrt(lambda);\n      ry *= Math.sqrt(lambda);\n    }\n\n    var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n\n    if (fa === fs) {\n      f *= -1;\n    }\n\n    if (isNaN(f)) {\n      f = 0;\n    }\n\n    var cxp = f * rx * yp / ry;\n    var cyp = f * -ry * xp / rx;\n    var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n    var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n\n    var vMag = function (v) {\n      return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n\n    var vRatio = function (u, v) {\n      return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n\n    var vAngle = function (u, v) {\n      return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n    };\n\n    var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n    var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n    var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n    var dTheta = vAngle(u, v);\n\n    if (vRatio(u, v) <= -1) {\n      dTheta = Math.PI;\n    }\n\n    if (vRatio(u, v) >= 1) {\n      dTheta = 0;\n    }\n\n    if (fs === 0 && dTheta > 0) {\n      dTheta = dTheta - 2 * Math.PI;\n    }\n\n    if (fs === 1 && dTheta < 0) {\n      dTheta = dTheta + 2 * Math.PI;\n    }\n\n    return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n  };\n\n  return Path;\n}(Shape_1.Shape);\n\nexports.Path = Path;\nPath.prototype.className = 'Path';\nPath.prototype._attrsAffectingSize = ['data'];\n\nGlobal_1._registerNode(Path);\n\nFactory_1.Factory.addGetterSetter(Path, 'data');\nUtil_1.Collection.mapMethods(Path);","map":{"version":3,"sources":["/Users/mikefang/Documents/cs-3152/no-strings-attached/LevelEditor/node_modules/konva/lib/shapes/Path.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","Util_1","require","Factory_1","Shape_1","Global_1","Path","_super","config","_this","call","dataArray","pathLength","parsePathData","data","i","length","on","_sceneFunc","context","ca","beginPath","n","c","command","points","lineTo","moveTo","bezierCurveTo","quadraticCurveTo","cx","cy","rx","ry","theta","dTheta","psi","fs","r","scaleX","scaleY","translate","rotate","scale","arc","closePath","fillStrokeShape","getSelfRect","forEach","start","end","inc","Math","PI","abs","t","point","getPointOnEllipticalArc","push","x","y","getPointOnCubicBezier","concat","minX","maxX","minY","maxY","isNaN","min","max","round","width","height","getLength","getPointAtLength","ii","slice","cp","getPointOnLine","getPointOnQuadraticBezier","getLineLength","x1","y1","x2","y2","sqrt","dist","P1x","P1y","P2x","P2y","fromX","fromY","undefined","m","run","rise","pt","ix","iy","len","u","pRise","pRun","pct","P3x","P3y","P4x","P4y","CB1","CB2","CB3","CB4","QB1","QB2","QB3","cosPsi","cos","sinPsi","sin","cs","cc","replace","RegExp","arr","split","coords","cpx","cpy","re","match","str","charAt","exec","j","jlen","parsed","parseFloat","cmd","startX","startY","prevCmd","ctlPtx","ctlPty","fa","shift","dx","dy","idx","convertEndpointToCenterParameterization","calcLength","p1","p2","path","psiDeg","xp","yp","lambda","f","cxp","cyp","vMag","v","vRatio","vAngle","acos","Shape","className","_attrsAffectingSize","_registerNode","Factory","addGetterSetter","Collection","mapMethods"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Util_1 = require(\"../Util\");\nvar Factory_1 = require(\"../Factory\");\nvar Shape_1 = require(\"../Shape\");\nvar Global_1 = require(\"../Global\");\nvar Path = (function (_super) {\n    __extends(Path, _super);\n    function Path(config) {\n        var _this = _super.call(this, config) || this;\n        _this.dataArray = [];\n        _this.pathLength = 0;\n        _this.dataArray = Path.parsePathData(_this.data());\n        _this.pathLength = 0;\n        for (var i = 0; i < _this.dataArray.length; ++i) {\n            _this.pathLength += _this.dataArray[i].pathLength;\n        }\n        _this.on('dataChange.konva', function () {\n            this.dataArray = Path.parsePathData(this.data());\n            this.pathLength = 0;\n            for (var i = 0; i < this.dataArray.length; ++i) {\n                this.pathLength += this.dataArray[i].pathLength;\n            }\n        });\n        return _this;\n    }\n    Path.prototype._sceneFunc = function (context) {\n        var ca = this.dataArray;\n        context.beginPath();\n        for (var n = 0; n < ca.length; n++) {\n            var c = ca[n].command;\n            var p = ca[n].points;\n            switch (c) {\n                case 'L':\n                    context.lineTo(p[0], p[1]);\n                    break;\n                case 'M':\n                    context.moveTo(p[0], p[1]);\n                    break;\n                case 'C':\n                    context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n                    break;\n                case 'Q':\n                    context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n                    break;\n                case 'A':\n                    var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];\n                    var r = rx > ry ? rx : ry;\n                    var scaleX = rx > ry ? 1 : rx / ry;\n                    var scaleY = rx > ry ? ry / rx : 1;\n                    context.translate(cx, cy);\n                    context.rotate(psi);\n                    context.scale(scaleX, scaleY);\n                    context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n                    context.scale(1 / scaleX, 1 / scaleY);\n                    context.rotate(-psi);\n                    context.translate(-cx, -cy);\n                    break;\n                case 'z':\n                    context.closePath();\n                    break;\n            }\n        }\n        context.fillStrokeShape(this);\n    };\n    Path.prototype.getSelfRect = function () {\n        var points = [];\n        this.dataArray.forEach(function (data) {\n            if (data.command === 'A') {\n                var start = data.points[4];\n                var dTheta = data.points[5];\n                var end = data.points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                if (dTheta < 0) {\n                    for (var t = start - inc; t > end; t -= inc) {\n                        var point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n                else {\n                    for (var t = start + inc; t < end; t += inc) {\n                        var point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n            }\n            else if (data.command === 'C') {\n                for (var t = 0.0; t <= 1; t += 0.01) {\n                    var point = Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n                    points.push(point.x, point.y);\n                }\n            }\n            else {\n                points = points.concat(data.points);\n            }\n        });\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            if (!isNaN(x)) {\n                minX = Math.min(minX, x);\n                maxX = Math.max(maxX, x);\n            }\n            if (!isNaN(y)) {\n                minY = Math.min(minY, y);\n                maxY = Math.max(maxY, y);\n            }\n        }\n        return {\n            x: Math.round(minX),\n            y: Math.round(minY),\n            width: Math.round(maxX - minX),\n            height: Math.round(maxY - minY)\n        };\n    };\n    Path.prototype.getLength = function () {\n        return this.pathLength;\n    };\n    Path.prototype.getPointAtLength = function (length) {\n        var point, i = 0, ii = this.dataArray.length;\n        if (!ii) {\n            return null;\n        }\n        while (i < ii && length > this.dataArray[i].pathLength) {\n            length -= this.dataArray[i].pathLength;\n            ++i;\n        }\n        if (i === ii) {\n            point = this.dataArray[i - 1].points.slice(-2);\n            return {\n                x: point[0],\n                y: point[1]\n            };\n        }\n        if (length < 0.01) {\n            point = this.dataArray[i].points.slice(0, 2);\n            return {\n                x: point[0],\n                y: point[1]\n            };\n        }\n        var cp = this.dataArray[i];\n        var p = cp.points;\n        switch (cp.command) {\n            case 'L':\n                return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n            case 'C':\n                return Path.getPointOnCubicBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n            case 'Q':\n                return Path.getPointOnQuadraticBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n            case 'A':\n                var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6];\n                theta += (dTheta * length) / cp.pathLength;\n                return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n        }\n        return null;\n    };\n    Path.getLineLength = function (x1, y1, x2, y2) {\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    };\n    Path.getPointOnLine = function (dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n        if (fromX === undefined) {\n            fromX = P1x;\n        }\n        if (fromY === undefined) {\n            fromY = P1y;\n        }\n        var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n        var run = Math.sqrt((dist * dist) / (1 + m * m));\n        if (P2x < P1x) {\n            run *= -1;\n        }\n        var rise = m * run;\n        var pt;\n        if (P2x === P1x) {\n            pt = {\n                x: fromX,\n                y: fromY + rise\n            };\n        }\n        else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\n            pt = {\n                x: fromX + run,\n                y: fromY + rise\n            };\n        }\n        else {\n            var ix, iy;\n            var len = this.getLineLength(P1x, P1y, P2x, P2y);\n            if (len < 0.00000001) {\n                return undefined;\n            }\n            var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n            u = u / (len * len);\n            ix = P1x + u * (P2x - P1x);\n            iy = P1y + u * (P2y - P1y);\n            var pRise = this.getLineLength(fromX, fromY, ix, iy);\n            var pRun = Math.sqrt(dist * dist - pRise * pRise);\n            run = Math.sqrt((pRun * pRun) / (1 + m * m));\n            if (P2x < P1x) {\n                run *= -1;\n            }\n            rise = m * run;\n            pt = {\n                x: ix + run,\n                y: iy + rise\n            };\n        }\n        return pt;\n    };\n    Path.getPointOnCubicBezier = function (pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n        function CB1(t) {\n            return t * t * t;\n        }\n        function CB2(t) {\n            return 3 * t * t * (1 - t);\n        }\n        function CB3(t) {\n            return 3 * t * (1 - t) * (1 - t);\n        }\n        function CB4(t) {\n            return (1 - t) * (1 - t) * (1 - t);\n        }\n        var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n        var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n        return {\n            x: x,\n            y: y\n        };\n    };\n    Path.getPointOnQuadraticBezier = function (pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n        function QB1(t) {\n            return t * t;\n        }\n        function QB2(t) {\n            return 2 * t * (1 - t);\n        }\n        function QB3(t) {\n            return (1 - t) * (1 - t);\n        }\n        var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n        var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n        return {\n            x: x,\n            y: y\n        };\n    };\n    Path.getPointOnEllipticalArc = function (cx, cy, rx, ry, theta, psi) {\n        var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\n        var pt = {\n            x: rx * Math.cos(theta),\n            y: ry * Math.sin(theta)\n        };\n        return {\n            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n            y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n        };\n    };\n    Path.parsePathData = function (data) {\n        if (!data) {\n            return [];\n        }\n        var cs = data;\n        var cc = [\n            'm',\n            'M',\n            'l',\n            'L',\n            'v',\n            'V',\n            'h',\n            'H',\n            'z',\n            'Z',\n            'c',\n            'C',\n            'q',\n            'Q',\n            't',\n            'T',\n            's',\n            'S',\n            'a',\n            'A'\n        ];\n        cs = cs.replace(new RegExp(' ', 'g'), ',');\n        for (var n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n        var arr = cs.split('|');\n        var ca = [];\n        var coords = [];\n        var cpx = 0;\n        var cpy = 0;\n        var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n        var match;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            str = str.slice(1);\n            coords.length = 0;\n            while ((match = re.exec(str))) {\n                coords.push(match[0]);\n            }\n            var p = [];\n            for (var j = 0, jlen = coords.length; j < jlen; j++) {\n                var parsed = parseFloat(coords[j]);\n                if (!isNaN(parsed)) {\n                    p.push(parsed);\n                }\n                else {\n                    p.push(0);\n                }\n            }\n            while (p.length > 0) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var cmd = null;\n                var points = [];\n                var startX = cpx, startY = cpy;\n                var prevCmd, ctlPtx, ctlPty;\n                var rx, ry, psi, fa, fs, x1, y1;\n                switch (c) {\n                    case 'l':\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'm':\n                        var dx = p.shift();\n                        var dy = p.shift();\n                        cpx += dx;\n                        cpy += dy;\n                        cmd = 'M';\n                        if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n                            for (var idx = ca.length - 2; idx >= 0; idx--) {\n                                if (ca[idx].command === 'M') {\n                                    cpx = ca[idx].points[0] + dx;\n                                    cpy = ca[idx].points[1] + dy;\n                                    break;\n                                }\n                            }\n                        }\n                        points.push(cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'M';\n                        points.push(cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'C':\n                        points.push(p.shift(), p.shift(), p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'c':\n                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'Q':\n                        points.push(p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'q':\n                        points.push(cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                    case 'a':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                }\n                ca.push({\n                    command: cmd || c,\n                    points: points,\n                    start: {\n                        x: startX,\n                        y: startY\n                    },\n                    pathLength: this.calcLength(startX, startY, cmd || c, points)\n                });\n            }\n            if (c === 'z' || c === 'Z') {\n                ca.push({\n                    command: 'z',\n                    points: [],\n                    start: undefined,\n                    pathLength: 0\n                });\n            }\n        }\n        return ca;\n    };\n    Path.calcLength = function (x, y, cmd, points) {\n        var len, p1, p2, t;\n        var path = Path;\n        switch (cmd) {\n            case 'L':\n                return path.getLineLength(x, y, points[0], points[1]);\n            case 'C':\n                len = 0.0;\n                p1 = path.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                for (t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case 'Q':\n                len = 0.0;\n                p1 = path.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);\n                for (t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case 'A':\n                len = 0.0;\n                var start = points[4];\n                var dTheta = points[5];\n                var end = points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n                if (dTheta < 0) {\n                    for (t = start - inc; t > end; t -= inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                else {\n                    for (t = start + inc; t < end; t += inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                return len;\n        }\n        return 0;\n    };\n    Path.convertEndpointToCenterParameterization = function (x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n        var psi = psiDeg * (Math.PI / 180.0);\n        var xp = (Math.cos(psi) * (x1 - x2)) / 2.0 + (Math.sin(psi) * (y1 - y2)) / 2.0;\n        var yp = (-1 * Math.sin(psi) * (x1 - x2)) / 2.0 +\n            (Math.cos(psi) * (y1 - y2)) / 2.0;\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n        if (lambda > 1) {\n            rx *= Math.sqrt(lambda);\n            ry *= Math.sqrt(lambda);\n        }\n        var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\n            (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n        if (fa === fs) {\n            f *= -1;\n        }\n        if (isNaN(f)) {\n            f = 0;\n        }\n        var cxp = (f * rx * yp) / ry;\n        var cyp = (f * -ry * xp) / rx;\n        var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n        var vMag = function (v) {\n            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n        };\n        var vRatio = function (u, v) {\n            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n        };\n        var vAngle = function (u, v) {\n            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n        };\n        var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n        var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n        var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n        var dTheta = vAngle(u, v);\n        if (vRatio(u, v) <= -1) {\n            dTheta = Math.PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * Math.PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * Math.PI;\n        }\n        return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n    };\n    return Path;\n}(Shape_1.Shape));\nexports.Path = Path;\nPath.prototype.className = 'Path';\nPath.prototype._attrsAffectingSize = ['data'];\nGlobal_1._registerNode(Path);\nFactory_1.Factory.addGetterSetter(Path, 'data');\nUtil_1.Collection.mapMethods(Path);\n"]},"metadata":{},"sourceType":"script"}